
#~
  sigma from epsilon for an isotropic elastic material
~#
def sigma_hooke_iso( eps, young, poisson )
    dim := eps.nb_rows
    Id := Mat[ Op, Gen[dim,dim] ]( function = x => x[0] == x[1] )
    return young / ( 1 + poisson ) * ( eps + poisson / ( 1 - 2 * poisson ) * trace( eps ) * Id )


#~
  isotropic hooke
~#
def hooke_iso( E, nu )
    dim := 3
    e := Mat[ Op, Gen[dim,dim] ]( function = x => symbol("e_{$(x)}") )
    s := sigma_hooke_iso( e, E, nu )
    # -> sigma.diff( epsilon )
    H := Tensor[ Op, [dim,dim,dim,dim] ]( function = x => 0 )
    for ind_s, val_s in s
        for ind_e, val_e in e
            H[ ind_s +++ ind_e ] = val_s.diff(val_e)
    return H
